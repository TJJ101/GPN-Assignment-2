<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Retrieves FontAwesome font from Github, and saves it to the user's device in the working directory.
//Sets our font as a global variable so we can call it from any object
globalvar font;

//Downloads the font from the FontAwesome Github repository. The font is downloaded to the working directory on the user's device
file = http_get_file("https://github.com/FortAwesome/Font-Awesome/blob/master/fonts/fontawesome-webfont.ttf?raw=true", working_directory+"glyphicons-regular.ttf"); 

//Creates a return result variable to tell our HTTP event what information was received. We set it to null at first because it won't load anything until the HTTP event. If we don't establish the variable first, we will get errors in the HTTP event
return_result = "null";

//Sets our default font to font_fontawesome. (This font can be whatever you want as long as it exists in the resource tree, it will be replaced with the downloaded font on Line 13 of the HTTP event)
font = font_fontawesome;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loads our font into Gamemaker
//If our DS Map ID Finds Our File
if ds_map_find_value(async_load, "id") == file
    {
    //status:  Returns a value of less than 0 for an error, 0 for complete and 1 for receiving packets
    var status = ds_map_find_value(async_load, "status");
    //If our status is complete (0)
    if status == 0
       {
       //Returns The data received (string only).
       return_result= ds_map_find_value(async_load, "result");
       //Assigns our downloaded font to our global font variable,size 20, Bold is set to false, Italic is set to false, Using the default ASCII Decimal Values, although it's irrelevent to the function.
       font = font_add(return_result,20,0,0,32,127);
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
